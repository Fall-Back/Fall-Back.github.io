#{$es__page_main} > div > header ~ ul {
    display: flex;
    flex-wrap: wrap;
    margin: -0.5rem;
    background: #eee;
    padding: 0.5rem;
    /* Perhaps use this if setting a max-width on the items.
    justify-content: space-evenly;
    */
    /*
      Note 1-2 is mid-way between 1 and 2, it's only used on '12 items' thus far.
    */
    --bp1: 35rem;
    --bp1-2: 45rem;
    --bp2: 65rem;
}
    
#{$es__page_main} > div > header ~ ul > * {
    height: 20vh;
    margin: 0.5rem;
    flex-grow: 1;
    /* This may do a reasonable job browsers that don't support min()/max() functions. Use !important to test this */
    flex-basis: 15em /*!important*/;
    
    color: #fff;
    background-color: #000;
    
    /* You may want a max-width, maybe not:
    max-width: 25em;
    */
}

@supports (width: max(1px, 1px)) {
    #{$es__page_main} > div > header ~ ul {
      flex-basis: auto;
    }
      /* 2 or more: */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+2),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+2) ~ * {
      flex-basis: #{"max(50% - 1rem, (var(--bp1) - 100%) * 999)"};
    }
      /* 3 or more: */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+3),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+3) ~ * {
      flex-basis: #{"max(33% - 1rem, (var(--bp1) - 100%) * 999)"};
    }
      /* 4 or more: */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+4),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+4) ~ * {
      flex-basis: #{"min(max(50% - 1rem, (var(--bp1) - 100%) * 999), max(25% - 1rem, (var(--bp2) - 100%) * 999))"};
    }
      
    /*
        From here on in there are increasingly more possibilities on how things can be laid out.
        More items = more possibilities. I've tried to go for what I consider to be the most balanced option but almost all other possibilities are achievable.
    */
      /* 5 or more: */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+5),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+5) ~ * {
      flex-basis: #{"min(max(33% - 1rem, (var(--bp1) - 100%) * 999), max(20% - 1rem, (var(--bp2) - 100%) * 999))"};
    }
      /* 5 or more, different values for the first two: */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+5),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+5) + * {
      flex-basis: #{"min(max(50% - 1rem, (var(--bp1) - 100%) * 999), max(20% - 1rem, (var(--bp2) - 100%) * 999))"};
    }
      /* 6 or more: (from here on we're assuming all items on one row is too many, but it can be done) */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+6),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+6) ~ * {
      flex-basis: #{"max(33% - 1rem, (var(--bp1) - 100%) * 999)"};
    }
      /* 7 or more: (7 is tricky) */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+7),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+7) ~ * {
      flex-basis: #{"min(max(50% - 1rem, (var(--bp1) - 100%) * 999), max(25% - 1rem, (var(--bp2) - 100%) * 999))"};
    }
      /* 7 or more, different values for the first three: */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+7),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+7) + *,
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+7) + * + * {
      flex-basis: #{"max(33% - 1rem, (var(--bp2) - 100%) * 999)"};
    }
      /* Note I really like this way of doing 7 but it's a less consitent progression to the others. Just keeping for reference.
    7 or more, different values for the first two: *
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+7),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+7) ~ * {
      flex-basis: #{"max(33% - 1rem, (var(--bp1) - 100%) * 999)"};
    }
      /* 7 or more, different values for the first two: *
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+7),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+7) + * {
      flex-basis: #{"max(50% - 1rem, (var(--bp1) - 100%) * 999)"};
    }*/
      /* 8 or more: */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+8),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+8) ~ * {
      flex-basis: #{"min(max(50% - 1rem, (var(--bp1) - 100%) * 999), max(25% - 1rem, (var(--bp2) - 100%) * 999))"};
    }
      /* 9 or more: */
    /*#{$es__page_main} > div > header ~ ul > :nth-last-child(n+9),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+9) ~ * {
      flex-basis: #{"max(33% - 1rem, (var(--bp1) - 100%) * 999)"};
    }*/
      #{$es__page_main} > div > header ~ ul > :nth-last-child(n+9),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+9) ~ * {
      flex-basis: #{"min(max(33% - 1rem, (var(--bp1) - 100%) * 999), max(20% - 1rem, (var(--bp2) - 100%) * 999))"};
    }
      /* 9 or more, different values for the first three: */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+9),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+9) + *,
      #{$es__page_main} > div > header ~ ul > :nth-last-child(n+9) + * + * {
      flex-basis: #{"min(max(33% - 1rem, (var(--bp1) - 100%) * 999), max(25% - 1rem, (var(--bp2) - 100%) * 999))"};
    }
      /* 10 or more: */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+10),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+10) ~ * {
      flex-basis: #{"min(max(50% - 1rem, (var(--bp1) - 100%) * 999), max(20% - 1rem, (var(--bp2) - 100%) * 999))"};
    }
      /* 11 or more: */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+11),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+11) ~ * {
      flex-basis: #{"min(max(50% - 1rem, (var(--bp1) - 100%) * 999), max(25% - 1rem, (var(--bp2) - 100%) * 999))"};
    }
      /* 11 or more, different values for the first ...: */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+11),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+11) + *,
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+11) + * + *,
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+11) + * + * + *,
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+11) + * + * + * + * {
      flex-basis: #{"max(50% - 1rem, (var(--bp2) - 100%) * 999)"};
    }
      /* 12 or more: */
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+12),
    #{$es__page_main} > div > header ~ ul > :nth-last-child(n+12) ~ * {
      flex-basis: #{"min(max(50% - 1rem, (var(--bp1) - 100%) * 999), max(33% - 1rem, (var(--bp1-2) - 100%) * 999), max(25% - 1rem, (var(--bp2) - 100%) * 999))"};
    }
}
    /* Just for the demo */
    /*
body {
    padding: 2rem;
    margin: 0 auto;
    max-width: 80rem;
}
    #{$es__page_main} > div > header ~ ul > * {
    height: 20vh;
    background-color: #000;
}
*/
