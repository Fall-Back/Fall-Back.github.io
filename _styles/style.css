/* --| SETTINGS |-------------------------------------------------------------------------------- */
@import url("https://fonts.googleapis.com/css?family=Merriweather|Source+Sans+Pro:400,700,400italic");
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Start-CSS Settings v1.0.0

    Fall-Back is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+


    Any double-classing (e.g. `.class.class`) is deliberate and intended to increase specifity.
    This allows any applicable Start-CSS declarations to be overidden.
    E.g. `.{pattern} .{pattern}__child` would `a[href]`, but just `.{pattern}` wouldn't, so we use
    `.{pattern}.{pattren}`

|-------------------------------------------------------------------------------------------------*/
/*! Start CSS. See SCSS file for documentation. */
/*

    Start CSS is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+

    Notes:

    -moz-calc because this supports FF8+ and I like to be thorough.

    CSS hacks from http://browserstrangeness.com/css_hacks.html
    (hack and browser support in comments above each usage)

    !!! Maybe don't include custom properties in this, I think it over-complicates things and needs
    gradient background overlays to lighten/darken background colors dynamically.
    Possibly include a separate file to add custom property support that overrides what it needs,
    all wrapped in an `@supports`.

    Resources:
    * http://www.smashingmagazine.com/2012/12/css-baseline-the-good-the-bad-and-the-ugly/
    * https://24ways.org/2006/compose-to-a-vertical-rhythm

    NOTE TO SELF.
    Where borders are concerned, probably best to leave margins alone and use padding to maintain
    baseline-grid. After all, if there's a border, there will have to be padding too.

    overflow-y makes element focussable in FireFox.

*/
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Start-CSS Settings v1.0.0

    Fall-Back is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+


    Any double-classing (e.g. `.class.class`) is deliberate and intended to increase specifity.
    This allows any applicable Start-CSS declarations to be overidden.
    E.g. `.{pattern} .{pattern}__child` would `a[href]`, but just `.{pattern}` wouldn't, so we use
    `.{pattern}.{pattren}`

|-------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------|

    FUNCTIONS AND MIXINS
   (These must come before the Setting, as the settings make use of some of these)

|-------------------------------------------------------------------------------------------------*/
/*
    Colour contrast from https://gist.github.com/FStop/8959422
    
    Usage:
    @if color_contrast($colour, #fff) < 2 {
        color: #333;
    }
    @else{
        color: #fff;
    }
*/
/* Awesome contrast ratio function
* via https://gist.github.com/voxpelli/6304812
**/
/*
    Apply a border and a padding that offsets the border-width from one spacing unit so as not to
    affect the vertical rhythm.
    Note the Opera Mini doesn't support `calc` so we need to include normal padding for that
    browser.
    Also, since we're supporting FF 8+, we're including -moz-calc for versions up to 16.
    I may consider removing this as those browsers are dead, but I'm just being thorough for now.

    Note on the 'last margin' issue/hack:
    The pseudo element is intended to provide a collapsible margin to cancel out any 'trailing'
    margins from content elements. However, since we're reducing the whole padding space by the
    border-width to maintain the vertical rhythm, that margin is also less, BUT the content margin
    is NOT being reduced, so that wins out - the reduction is ignored.
    If the pseudo element bottom margin is adjusted to cancel out the height (1px) AS WELL AS
    the amount of border-width, but the last element DOES NOT have a margin, then the space becomes
    too small.
    If pseudo-element height is 0, it doesn't work in IE, Chrome, Safari, without inline-block
*/
/*
    This button mixin isn't really meant for generating specific/themed _types_ of button - there
    would be too much code duplication for that.
    Instead, this is intended to create buttons for new/custom selectors.
    For example:

    ```
    [role="button"] {
        @include button;
    }
    ```

    rather than:

    ```
        .btn--affirmative {
            @include button(<text-color>, <bg-color>);
        }
    ```

    Note - because of this, think about removing parameters (it changed from my original intention -
    I may change it back or split this into 2 mixins, or even just move things that are meant for
    input[type="button"] to that ruleset - actually that's not a bad idea).

*/
/*
    1. Remove the tapping delay from clickable elements.

    Sort out the height of buttons. At 12px spacing, should be 30px high with 3px top/bottom margin.
    Note Edge doesn't like: `line-height: calc(3rem - 2px)` if `display: inline-flex`
    FF8 - ? doesn't like `line-height: -moz-calc()` and ignores
    Need to make sure height is governed by line-height in case of breaks within buttons.
*/
/*-------------------------------------------------------------------------------------------------|

    SETTINGS

|-------------------------------------------------------------------------------------------------*/
/* Global focus style: */
/*
$anchor-focus-text-color: false;
@if $anchor-focus-background-color != false {
    @if color_light_or_dark($anchor-focus-background-color) == 'light' {
        $anchor-focus-text-color: darken($anchor-text-color, 50%);
    } @else {
        $anchor-focus-text-color: lighten($anchor-text-color, 70%);
    }
}
@debug $anchor-focus-text-color;
*/
/*
//$button-focus-outline-width: $ui-focus-outline-width !default;
$button-focus-outline-width: false !default;
$button-focus-outline-style: $ui-focus-outline-style !default;
$button-focus-outline-color: rgba(255,255,255,0.6) !default;
//$button-focus-outline-offset: -($ui-focus-outline-offset + $button-border-width) !default;
$button-focus-outline-offset: -($ui-focus-outline-offset + $button-border-width) !default;
*/
/*$input-focus-indicator-color: false !default;
@if color_light_or_dark($input-background-color) == 'light' {
    $input-focus-indicator-color: darken($input-background-color, 30%);
} @else {
    $input-focus-indicator-color: lighten($input-background-color, 30%);
}
@debug color_light_or_dark($input-background-color);*/
/* Output class for reference (tmp): */
.ref {
  fallback--base-rem-space-unit: 2.4rem;
  fallback--base-rem-1px: 0.1rem;
  fallback--root-font-size: 10px;
  fallback--root-font-size-percent: 62.5;
}

/*-------------------------------------------------------------------------------------------------|

    ROOT STYLES

|-------------------------------------------------------------------------------------------------*/
/*
    https://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/
    https://css-tricks.com/snippets/javascript/fix-ie-10-on-windows-phone-8-viewport/

    The following rule fixes a problem with IE10 on Windows 8 snap mode, but apparently causes
    problems on Windows Phone where the only fix seems to be a JS one.

    https://nostrongbeliefs.com/why-i-think-we-shouldnt-use-css-viewport-in-ie10-for-now/

    This reckons it's not worth it and as I can't seem to test the Windows Phone problem (emulator
    on BrowserStack - not real device which is why I _think) I'm not seeing the problem) I think it
    may be safest to keep this out for now.
    - Hmmm affect 8.1 IE11 as well... not good.
    UPDATE: using hack to only apply the viewport declaration to IE10-11 may work?

    https://timkadlec.com/2013/01/windows-phone-8-and-device-width/
*/
/*
    1. Change the default box-sizing (-moz prefix for FF8-28).

    2. `min-height` _should_ be what we want here (as declared in inuit css), except that
       `min-height` doesn't works as expected; child elements set to `(min-)height: 100%;` won't
       increase their height - they'll only do that if the parent has `height: 100%;`.
       This can lead to situations where sometimes elements (and thus their visible decoration) do
       not stretch to be tall enough for their content (because they're limited to 100% height).

    3. Force scrollbars to always be visible to prevent awkward 'jumps' when
       navigating between pages that do/do not have enough content to produce
       scrollbars naturally. (I)

    4. Convert the value to a percentage so as not to override user font settings.

    5. Prevent font size adjustments after orientation changes in IE and iOS. (N)
*/
html {
  -moz-box-sizing: border-box;
  /* 1 */
  box-sizing: border-box;
  /* 1 */
  height: 100%;
  /* 2 */
  overflow-y: scroll;
  /* 3 */
  color: #333;
  background-color: #fff;
  font-size: 62.5%;
  /* 4 */
  font-family: "Source Sans Pro", sans-serif;
  -ms-text-size-adjust: 100%;
  /* 5 */
  -webkit-text-size-adjust: 100%;
  /* 5 */
}

/*
    Fix font size for IE9,10 as it can't calculate % to 1 decimal place! Grrr.
*/
@media screen and (min-width: 0\0) and (min-resolution: 0.001dpcm) {
  html {
    font-size: calc(0.625rem + 0.1px);
  }
}

_:-ms-lang(x), html {
  font-size: calc(0.625rem + 0.1px) \9;
}

/*
    'Global' reset.

    1. For Mac Safari 6.1-8.
*/
* {
  -webkit-margin-before: 0;
  /* 1 */
  -webkit-margin-after: 0;
  /* 1 */
  -webkit-margin-start: 0;
  /* 1 */
  -webkit-margin-end: 0;
  /* 1 */
  margin: 0;
  padding: 0;
}

/*
    1. Add box sizing inheritance in all browsers.
       Supporting FF8+ due to Mustard Cut so including for completeness.
    2. Remove repeating backgrounds in all browsers.
*/
*,
::before,
::after {
  -moz-box-sizing: inherit;
  /* 1 */
  box-sizing: inherit;
  /* 1 */
  background-repeat: no-repeat;
  /* 2 */
  -webkit-font-smoothing: inherit;
}

/*
    1. Add text decoration inheritance in all browsers (opinionated). (s)
    2. Add vertical alignment inheritance in all browsers (s).
*/
::before,
::after {
  text-decoration: inherit;
  /* 1 */
  vertical-align: inherit;
  /* 2 */
}

/*
    Remove the inner border and padding from form elements in older Firefox.
*/
::-moz-focus-inner {
  margin: 0;
  padding: 0;
  border: 0;
}

/*
    1. Ensure that absolutely positioned child elements expand to the full height of the body.
*/
body {
  position: relative;
  /* 1 */
  min-width: 250px;
  max-width: none;
  min-height: 100%;
  margin: 0;
  padding: 2.4rem;
  font-size: 1.6em;
  line-height: 2.4rem;
}

/*-------------------------------------------------------------------------------------------------|

    ALL ELEMENTS

|-------------------------------------------------------------------------------------------------*/
/*
    a:link a:visited a:hover a:active a:focus

    1. Remove the gray background on active links in IE 10.
    2. Remove the gaps in underlines in iOS 8+ and Safari 8+.
    3. Remove the tapping delay from clickable elements .
*/
a[href] {
  margin-bottom: -2px;
  padding-bottom: 2px;
  border-bottom: 2px solid;
  color: #5382A4;
  background-color: transparent;
  /* 1 */
  text-decoration: none;
  -webkit-text-decoration-skip: objects;
  /* 2 */
  -ms-touch-action: manipulation;
  /* 3 (IE10) */
  touch-action: manipulation;
  /* 3 */
  /*
    @if $anchor-focus-outline-width != false {
        outline: none;

        &:focus {
            outline-width: $anchor-focus-outline-width;
            outline-style: $anchor-focus-outline-style;
            outline-color: $anchor-focus-outline-color;
            outline-offset: $anchor-focus-outline-offset;
        }
    }

    @if $anchor-focus-background-color != false {
        outline: none;

        &:focus {
            color: $anchor-focus-text-color;
            background-color: $anchor-focus-background-color;
        }
    }*/
}

a[href]:hover, a[href]:active {
  border-bottom: 2px dashed;
  color: #426782;
}

a[href]:focus {
  outline: 0;
  box-shadow: 0 0 0 3px rgba(83, 130, 164, 0.5);
}

a[href][rel="external"]::after {
  display: inline;
  content: "";
  padding-left: 1.25em;
  background: linear-gradient(45deg, transparent 50%, currentColor 50%);
  font-size: 0.4em;
  line-height: 0;
  vertical-align: super;
}

a[href][rel="external"]:hover::after {
  background: linear-gradient(45deg, transparent 50%, currentColor 50%);
}

/*
    1. Remove the bottom border in Firefox 39-.
    2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
*/
abbr {
  cursor: help;
}

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

address {
  margin-bottom: 2.4rem;
}

article {
  display: block;
  margin-bottom: 2.4rem;
}

aside {
  display: block;
  margin-bottom: 2.4rem;
}

/*
    1. Add the correct display in IE 9-.
    2. Chrome 44-, iOS 8+, Safari 9+.
*/
audio {
  display: inline-block;
  /* 1 */
  vertical-align: middle;
}

audio:not([controls]) {
  display: none;
  /* 2 */
  height: 0;
}

/*
    1: Add the correct font weight in Chrome, Edge, and Safari.
    2. Prevent increase in line-height in IE.
*/
b {
  font-weight: bolder;
  /* 1 */
  line-height: 1;
}

blockquote {
  margin-bottom: 2.4rem;
  margin-left: 2.4rem;
  font-style: italic;
  /*
        @TODO - set up vars and styles for the most common quote styles.
        I.e. left-border, and enclosing quotes.
    */
}

button {
  display: inline-block;
  /* AK. IE9 needs this. Hmmm, for what exactly?*/
  min-height: 3rem;
  overflow: visible;
  /* S: Internet Explorer 11-, N: Show the overflow in Edge, Firefox, and IE. */
  margin: 0.3rem 0;
  padding-top: 0.3rem;
  padding-top: -moz-calc(0);
  padding-top: calc(0.3rem - 1px);
  padding-right: 0.6rem;
  padding-bottom: 0.3rem;
  padding-bottom: -moz-calc(0);
  padding-bottom: calc(0.3rem - 1px);
  padding-left: 0.6rem;
  border-color: rgba(0, 0, 0, 0.2);
  border-style: solid;
  border-width: 1px;
  border-radius: 3px;
  color: #fff;
  background-color: #5382A4;
  font-weight: inherit;
  font-style: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: 2.4rem;
  vertical-align: middle;
  text-transform: none;
  /* [N0], N: Remove the inheritance of text transform in Edge, Firefox, and IE. */
  cursor: pointer;
  -ms-touch-action: manipulation;
  /* 1 (IE10) */
  touch-action: manipulation;
  /* 1 */
  -webkit-appearance: none;
  /*@if $button-focus-outline-width != false {
        &:hover,
        &:active,
        &:focus {
            outline-width: $button-focus-outline-width;
            outline-style: $button-focus-outline-style;
            outline-color: $button-focus-outline-color;
            outline-offset: $button-focus-outline-offset;
        }
    }*/
}

button:hover, button:active {
  background-color: #426782;
}

button:focus {
  outline: 0;
  box-shadow: 0 0 0 3px rgba(83, 130, 164, 0.5);
}

_:-o-prefocus, :root button {
  line-height: 2.4rem !important;
}

/*
    FF15-

    Remove the inner border and padding in Firefox and fix height.

    Early FF doesn't correctly apply the box sizing to inputs (buttons?)
    Adding margin to -moz-focus-inner helps to force the correct height.
    It doesn't have any effect in newer FF.

    NOTE: these adjustments don't seem very robust / dependent on font-family and font-size.
*/
button::-moz-focus-inner {
  margin: -0.0625em 0;
}

/*
    Reset for FF16+
*/
_:-moz-meter-optimum, :root button::-moz-focus-inner {
  margin: 0;
}

/*
    1. Add the correct display in IE 9-.
*/
canvas {
  display: inline-block;
  /* 1 */
  vertical-align: middle;
}

caption {
  display: table-caption;
  padding-top: 1.2rem;
  padding-right: 1.2rem;
  padding-bottom: 1.2rem;
  padding-left: 1.2rem;
  color: #fff;
  background-color: #5382A4;
  font-weight: bold;
}

/*
    1. Correct the inheritance and scaling of font size in all browsers. (N)
    2. Address odd `em`-unit font size rendering in all browsers. (N)
    3. Prevent the element increasing the line-height of the parent.
*/
code {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
  line-height: 0;
  /* 3 */
}

dd {
  margin-left: 3.6rem;
}

details {
  display: block;
  /* N: IE 10/11 */
}

/*
    Address styling not present in Safari and Chrome. (N)
*/
dfn {
  font-style: italic;
}

/*
    1. Either of these will make lists behave properly next to floated items.
       (https://paulbakaus.com/tutorials/css/block-formatting-contexts-and-lists)
       a. This causes problems with some decoration. E.g. if the last element in the list is a link,
           bottom borders get cropped, so using b instead.
*/
dl {
  margin-bottom: 2.4rem;
  display: table;
  /* 1b */
}

dt {
  font-weight: bold;
}

/*
    1. De-italicize nested ems
*/
em em {
  font-style: normal;
  /* 1 */
}

/*
    Fieldsets and legends can be difficult to style so I'm keeping their appearance basically the
    same as the default - just a bit of theming.
    More info here: https://thatemil.com/blog/2015/01/03/reset-your-fieldset/
*/
fieldset {
  margin-bottom: 2.4rem;
  min-width: 0;
  border-width: 1px;
  border-style: solid;
  border-color: #5382A4;
  padding-top: 2.4rem;
  padding-top: -moz-calc(2.4rem - 1px);
  padding-top: calc(2.4rem - 1px);
  padding-left: 2.4rem;
  padding-left: -moz-calc(2.4rem - 1px);
  padding-left: calc(2.4rem - 1px);
  padding-right: 2.4rem;
  padding-right: -moz-calc(2.4rem - 1px);
  padding-right: calc(2.4rem - 1px);
}

fieldset::after {
  display: block;
  content: "";
  height: 1px;
  margin-top: 2.4rem;
  margin-bottom: -1px;
  margin-bottom: -moz-calc(-1px - 1px);
  margin-bottom: calc(-1px - 1px);
}

fieldset fieldset {
  margin: 0;
  padding: 0;
  border-width: 0;
}

fieldset fieldset::after {
  display: none;
}

figcaption {
  display: block;
}

figure {
  display: block;
  margin-bottom: 2.4rem;
}

footer {
  display: block;
  margin-bottom: 2.4rem;
}

form {
  margin-bottom: 2.4rem;
}

header {
  display: block;
  margin-bottom: 2.4rem;
}

hgroup {
  display: block;
}

h1 {
  margin-bottom: 2.4rem;
  font-size: 3.25em;
  line-height: 6rem;
}

h2 {
  margin-bottom: 2.4rem;
  font-size: 2.5em;
  line-height: 4.8rem;
}

h3 {
  margin-bottom: 2.4rem;
  font-size: 1.875em;
  line-height: 3.6rem;
}

h4 {
  margin-bottom: 2.4rem;
  font-size: 1.375em;
  line-height: 3.6rem;
}

h5 {
  margin-bottom: 2.4rem;
  font-size: 1.125em;
  line-height: 2.4rem;
}

h6 {
  margin-bottom: 2.4rem;
  font-size: 1em;
  line-height: 2.4rem;
}

/*
    1. Show the overflow in Edge and IE. (N)
*/
hr {
  height: 0;
  overflow: visible;
  /* 1 */
  margin-top: -1px;
  margin-bottom: 2.4rem;
  border-top: none;
  border-right: none;
  border-bottom: 1px solid #5382A4;
  border-left: none;
}

iframe {
  vertical-align: middle;
}

/*
    1. Fluid images for responsive purposes.
    2. Remove the border on images inside links in IE 10-.
    3. Offset `alt` text from surrounding copy.
    4. Setting `vertical-align` removes the whitespace that appears under `img` elements when they
       are dropped into a page as-is. Safer alternative to using `display: block;`.
    5. Google Maps breaks if `max-width: 100%` acts upon it; use their selector to remove the
       effects.
    6. If a `width` and/or `height` attribute have been explicitly defined, let's not make the
       image fluid.
*/
img {
  max-width: 100%;
  /* 1 */
  border-style: none;
  /* 2  */
  font-style: italic;
  /* 3 */
  vertical-align: middle;
  /* 4 */
}

.gm-style img, img[width], img[height] {
  /* 6 */
  max-width: none;
}

/*
    Special treatment for images inside links.
*/
a img {
  margin-bottom: -2px;
  border-width: inherit;
  border-style: inherit;
}

/*
    1. Allow inputs to contract to avoid braking containers:
    2. Opera Mini needs this.
    3. Remove the tapping delay from clickable elements (S)
    4. Keep adjacent elements in the middle.
    5. This helps prevent default 'normal' from increasing element height in webkit.
*/
input {
  max-width: 100%;
  /* 1 */
  padding-top: 0.3rem;
  /* 2 */
  padding-top: calc(0.3rem - 1px);
  padding-right: 0.6rem;
  padding-bottom: 0.3rem;
  /* 2 */
  padding-bottom: calc(0.3rem - 1px);
  padding-left: 0.6rem;
  border-width: 1px;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  color: #333;
  background-color: #fff;
  font-size: inherit;
  font-weight: inherit;
  font-style: inherit;
  font-family: inherit;
  -ms-touch-action: manipulation;
  /* 3 (IE10) */
  touch-action: manipulation;
  /* 3 */
  vertical-align: middle;
  /* 4 */
  line-height: inherit;
  /* 5 */
  min-height: 3rem;
  margin: 0.3rem 0;
}

input:not([type]):focus,
[type="color"]:focus,
[type="date"]:focus,
[type="datetime"]:focus,
[type="datetime-local"]:focus,
[type="file"]:focus,
[type="month"]:focus,
[type="number"]:focus,
[type="password"]:focus,
[type="search"]:focus,
[type="range"]:focus,
[type="tel"]:focus,
[type="text"]:focus,
[type="time"]:focus,
[type="url"]:focus,
[type="week"]:focus {
  box-shadow: 0 0 0 3px rgba(83, 130, 164, 0.5);
  outline: 0;
}

/*
        Without custom styling (appearance: none), Safari doesn't apply the shadow, so breaks
        accessibility ...
    */
[type="checkbox"]:focus,
[type="radio"]:focus {
  box-shadow: 0 0 0 3px rgba(83, 130, 164, 0.5);
  outline: 0;
}

/*
        ... so reinstating the outline:
    */
_::-webkit-full-page-media, _:future, :root [type="checkbox"]:focus,
_::-webkit-full-page-media, _:future, :root [type="radio"]:focus {
  outline: auto 5px -webkit-focus-ring-color;
}

/*@if $input-focus-outline-width != false {
    input:not([type]):focus,
    [type="color"]:focus,
    [type="date"]:focus,
    [type="datetime"]:focus,
    [type="datetime-local"]:focus,
    [type="file"]:focus,
    [type="month"]:focus,
    [type="number"]:focus,
    [type="password"]:focus,
    [type="search"]:focus,
    [type="tel"]:focus,
    [type="text"]:focus,
    [type="time"]:focus,
    [type="url"]:focus,
    [type="week"]:focus {
        outline-width: $input-focus-outline-width;
        outline-style: $input-focus-outline-style;
        outline-color: $input-focus-outline-color;
        outline-offset: $input-focus-outline-offset;
    }

    [type="checkbox"]:focus,
    [type="radio"]:focus {
        outline-width: $input-focus-outline-width;
        outline-style: $input-focus-outline-style;
        outline-color: $input-focus-outline-color;
        outline-offset: $input-focus-outline-offset;
    }

    _::-webkit-full-page-media, _:future, :root [type="checkbox"]:focus,
    _::-webkit-full-page-media, _:future, :root [type="radio"]:focus {
        border: $input-focus-indicator-size solid $input-focus-indicator-color;
    }
}*/
/*
    IE9 adds the border and background:
*/
[type="checkbox"],
[type="radio"] {
  border: 0;
  background: transparent;
  cursor: pointer;
}

[type="button"],
[type="reset"],
[type="submit"] {
  display: inline-block;
  /* AK. IE9 needs this. Hmmm, for what exactly?*/
  min-height: 3rem;
  overflow: visible;
  /* S: Internet Explorer 11-, N: Show the overflow in Edge, Firefox, and IE. */
  margin: 0.3rem 0;
  padding-top: 0.3rem;
  padding-top: -moz-calc(0);
  padding-top: calc(0.3rem - 1px);
  padding-right: 0.6rem;
  padding-bottom: 0.3rem;
  padding-bottom: -moz-calc(0);
  padding-bottom: calc(0.3rem - 1px);
  padding-left: 0.6rem;
  border-color: rgba(0, 0, 0, 0.2);
  border-style: solid;
  border-width: 1px;
  border-radius: 3px;
  color: #fff;
  background-color: #5382A4;
  font-weight: inherit;
  font-style: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: 2.4rem;
  vertical-align: middle;
  text-transform: none;
  /* [N0], N: Remove the inheritance of text transform in Edge, Firefox, and IE. */
  cursor: pointer;
  -ms-touch-action: manipulation;
  /* 1 (IE10) */
  touch-action: manipulation;
  /* 1 */
  -webkit-appearance: none;
  /*@if $button-focus-outline-width != false {
        &:hover,
        &:active,
        &:focus {
            outline-width: $button-focus-outline-width;
            outline-style: $button-focus-outline-style;
            outline-color: $button-focus-outline-color;
            outline-offset: $button-focus-outline-offset;
        }
    }*/
}

[type="button"]:hover, [type="button"]:active,
[type="reset"]:hover,
[type="reset"]:active,
[type="submit"]:hover,
[type="submit"]:active {
  background-color: #426782;
}

[type="button"]:focus,
[type="reset"]:focus,
[type="submit"]:focus {
  outline: 0;
  box-shadow: 0 0 0 3px rgba(83, 130, 164, 0.5);
}

/*
    IE10 makes the line-height massive with calc, but doesn't appear to need it anyway.
*/
[type="button"],
[type="reset"],
[type="submit"] {
  line-height: 1\9;
}

/*
    IE and Edge behave differently (both to other browsers and each other) and so min-height and
    line-height settings don't seem consistent.

    1. On smaller devices the width of these inputs can force horizontal scrolling.
       Max-width doesn't work to solve this, but may be needed to restrict width on larger screens.
    2. Make sure button corners aren't visible.
*/
[type="file"] {
  width: 100%;
  /* 1 */
  max-width: 18.5em;
  min-height: 3rem;
  overflow: hidden;
  /* 2 */
  margin: 0.3rem 0;
  padding: 0;
  cursor: pointer;
}

/*
    Fix button height in Firefox.
*/
_:-moz-any-link, :root [type="file"] {
  height: 3rem;
}

_:-ms-input-placeholder, :root [type="file"] {
  background-color: #5382A4;
}

@media screen and (min-width: 0\0) and (min-resolution: 72dpi) {
  [type="file"] {
    padding-left: 0.6rem;
  }
}

/*
    iOS turns these inputs into selects which are a touch too high.
*/
[type="date"],
[type="datetime-local"],
[type="month"],
[type="time"],
[type="week"] {
  height: 2.8rem;
}

/*
    Remove extra padding in Chrome
*/
[type="date"]::-webkit-datetime-edit-fields-wrapper,
[type="datetime-local"]::-webkit-datetime-edit-fields-wrapper,
[type="month"]::-webkit-datetime-edit-fields-wrapper,
[type="time"]::-webkit-datetime-edit-fields-wrapper,
[type="week"]::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

/*
    Tidy spin buttons and apply cursor:
*/
[type="date"]::-webkit-inner-spin-button,
[type="datetime-local"]::-webkit-inner-spin-button,
[type="month"]::-webkit-inner-spin-button,
[type="number"]::-webkit-inner-spin-button,
[type="time"]::-webkit-inner-spin-button,
[type="week"]::-webkit-inner-spin-button {
  height: auto;
  cursor: pointer;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * N: Remove the inner padding and cancel buttons in Chrome on OS X and
 * Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
    Correct the text style on placeholders in Chrome, Edge, and Safari.
*/
::-webkit-input-placeholder {
  color: inherit;
  opacity: .54;
}

/*
    1. Correct the inheritance and scaling of font size in all browsers. (N)
    2. Address odd `em`-unit font size rendering in all browsers. (N)
    3. Prevent the element increasing the line-height of the parent.
*/
kbd {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
  line-height: 0;
  /* 3 */
}

/*
    1. Remove the tapping delay from clickable elements.
*/
label {
  display: inline-block;
  padding-top: 0.6rem;
  padding-bottom: 0.6rem;
  font-weight: bold;
  vertical-align: middle;
  cursor: pointer;
  -ms-touch-action: manipulation;
  /* 1 (IE10) */
  touch-action: manipulation;
  /* 1 */
}

/*
    Fieldsets and legends can be difficult to style so I'm keep their appearance basically the same
    as the default - just a bit of theming.
    More info here: https://thatemil.com/blog/2015/01/03/reset-your-fieldset/
*/
/*
    1. Correct the text wrapping in Edge and IE.
    2. Offset border width.
    3. Correct the color inheritance from `fieldset` elements in IE.

    Note $fieldset-border-width used deliberately (not $legend-border-width)- this is to account for
    the fact that fieldset top border width is ignored if there's a legend so the spacing is wrong.
*/
legend {
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  margin-top: 0;
  /* 2 */
  margin-bottom: 1px;
  /* 2 */
  padding: 0 0.6rem;
  border-width: 0;
  color: inherit;
  /* 3 */
  font-weight: bold;
  white-space: normal;
  /* 1 */
  /*  */
}

li {
  margin-left: 3.6rem;
}

li ul,
li ol {
  margin-bottom: 0;
}

/*
    1. Correct `block` display not defined for `main` in IE.
*/
main {
  display: block;
  /* 1 */
}

/*
    Address styling not present in IE 8/9.
*/
mark {
  background: #ff0;
  color: #000;
}

nav {
  display: block;
}

object {
  vertical-align: middle;
}

/*
    1. Either of these will make lists behave properly next to floated items.
       (https://paulbakaus.com/tutorials/css/block-formatting-contexts-and-lists)
       a. This causes problems with some decoration. E.g. if the last element in the list is a link,
          bottom borders get cropped, so using b instead.
       b. `flow-root` is the better option but support is low, so using table and flex fallbacks
          as well.
       Hmmm -moz-box / flex is causing numbering to mess up (always 0) on FF8-50.
    2. This is the only thing that works in early FF. However, width is content-width, not available
       width so any 'boxy' decoration on the list might look weird.
    3. This does a pretty good job of extending coverage:
       Chrome 29+, Edge 14+ (unable to test earlier)
    4. Extend support to IE10-11
*/
ol {
  margin-bottom: 2.4rem;
  display: table;
  /* 1b, 2 */
  display: -webkit-box;
  /* 1b, 3 */
  -webkit-box-orient: vertical;
  /* 1b, 3 */
  display: -ms-flexbox;
  /* 1b, 4 */
  -ms-flex-direction: column;
  /* 1b, 4 */
  display: flow-root;
  /* 1b */
}

/*
    1. The default cannot safely be changed in Chrome and Safari on OS X. ?? Not sure what this means now.
*/
optgroup {
  color: #333;
  background-color: #fff;
  font-weight: bold;
  /* 1 */
  font-style: inherit;
  font-size: inherit;
  font-family: inherit;
}

/*
    1. This v-centers the text in FF and Chrome. Edge doesn't apply this but looks ok regardless.
       Just IE9-11 to sort out?
*/
option {
  display: flex;
  /* 1 */
  align-items: center;
  /* 1 */
  min-height: 2.4rem;
  padding-right: 0.6rem;
  padding-left: 0.6rem;
  cursor: pointer;
}

option:hover {
  background-color: #d8e3eb;
  color: #333;
}

p {
  margin-bottom: 2.4rem;
}

/*
    Note: code is the most probable use for a `<pre>` tag. Other uses may occur (e.g. poem) but
    these could be adjusted with a class. Could maybe make this default configurable but leave as it
    is for now as it's likely that a poem would need a complete re-style (e.g. fonts etc.).

    1. Keep scrollbar visible to maintain vertical rhythm.
       Most browsers have a scrollbar height of 17px (calculated in settings section), however Edge
       appears to have a scrollbar height of 12px, so we override it with a hack.
    2. Correct the odd `em` font sizing in all browsers.
    3. Correct the inheritance and scaling of font size in all browsers.
*/
pre {
  overflow-x: scroll;
  /* 1 */
  overflow-y: auto;
  /* 1 */
  margin-bottom: 3.1rem;
  /* 1 */
  background-color: white;
  /*1 */
  font-size: 1em;
  /* 2 */
  font-family: monospace, monospace;
  /* 3 */
}

@supports (-ms-ime-align: auto) {
  pre {
    margin-bottom: 3.6rem;
    /* 1 */
  }
}

/*
        1. Revert zeroed line-height (see) `code`.
    */
pre code {
  display: inline-block;
  padding: 1.2rem;
  line-height: 2.4rem;
  /* 1 */
}

/*
    1. Add the correct vertical alignment in Chrome, Firefox, and Opera.
    2. Internet Explorer 11-, Windows Phone 8.1+
*/
progress {
  display: inline-block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
    1. Address odd `em`-unit font size rendering in all browsers.
    2. Correct the inheritance and scaling of font size in all browsers.
    3. Prevent the element increasing the line-height of the parent.
*/
samp {
  font-size: 1em;
  /* 1 */
  font-family: monospace, monospace;
  /* 2 */
  line-height: 0;
  /* 3 */
}

section {
  display: block;
  margin-bottom: 2.4rem;
}

/*
    1. Using height because min-height doesn't change the expand button height in FF.
    2. For FF.
    3. Remove the tapping delay from clickable elements.
*/
select {
  height: 3rem;
  /* 1 */
  margin: 0.3rem 0;
  border-width: 1px;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  color: #333;
  background-color: #fff;
  font-weight: inherit;
  font-style: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: 2.4rem;
  vertical-align: top;
  /* 2 */
  text-transform: none;
  cursor: pointer;
  -ms-touch-action: manipulation;
  /* 3 (IE10) */
  touch-action: manipulation;
  /* 3 */
}

select::-ms-expand {
  background-color: transparent;
  color: #000;
  border: 0;
  padding-left: 0.6rem;
  padding-right: 0.6rem;
}

select::-ms-value {
  color: currentColor;
}

/*
    Make the arrow indicator the same across browsers.

    1. Give webkit extra padding.
       (not sure this is the best way but it seems FF and IE add the option padding, but webkit
       doesn't so this basically works)
    2. Note - FF needs any # (e.g. fill colors) to be %23 encoded.
    3. FF48- does not support background-position-x/y.
    4. FF34- does not remove the arrow but also does not show the background image until FF29-, at
       which point both are shown. However, removing the right-padding solves this (see below).
*/
select:not([multiple]) {
  padding-left: 0.3rem;
  -webkit-padding-start: 0.6rem;
  /* 1 */
  padding-right: 2.4rem;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 4.95 10" fill="%23444"><polygon points="1.41 4.67 2.48 3.18 3.54 4.67 1.41 4.67"/><polygon points="3.54 5.33 2.48 6.82 1.41 5.33 3.54 5.33"/></svg>');
  /* 2 */
  background-repeat: no-repeat;
  background-position: right 0.3em bottom 0;
  /* 3 */
  -moz-appearance: none;
  /* 4 */
  -webkit-appearance: none;
  appearance: none;
}

/*
    We need to remove right padding before FF34, but there isn't a hack for that.
    So instead, remove for all FireFox ...
*/
_:-moz-tree-row(hover), select:not([multiple]) {
  padding-right: 0;
}

/*
    ... and reinstate for FF35+
*/
@supports (-moz-appearance: none) and (mask-type: alpha) {
  select:not([multiple]) {
    padding-right: 2.4rem;
  }
}

/*
    Undo custom arrow indicator for IE9-11:
*/
@media screen and (min-width: 0\0) and (min-resolution: 72dpi) {
  select:not([multiple]) {
    background-image: none\0;
    padding-right: 0\0;
  }
}

select:focus {
  box-shadow: 0 0 0 3px rgba(83, 130, 164, 0.5);
  outline: 0;
}

/*@if $input-focus-outline-width != false {
    select:focus {
        outline-width: $input-focus-outline-width;
        outline-style: $input-focus-outline-style;
        outline-color: $input-focus-outline-color;
        outline-offset: $input-focus-outline-offset;
    }
}*/
/*
    Note that Opera 25- and Safari(all - 11 latest at time of writing) treat select [size]s of
    less than 4 as 4.
*/
select[multiple] {
  height: auto;
  margin-top: 0.3rem;
  margin-right: 0;
  margin-bottom: -moz-calc(0.9rem - 2px);
  margin-bottom: calc(0.9rem - 2px);
  margin-left: 0;
}

/*
    Apply padding to fudge height in Safari (we need to apply to iOS)...
*/
_::-webkit-full-page-media, _:future, :root select[multiple] {
  margin-bottom: 0;
  padding: 0.2rem;
}

/*
    ... but reset for Mac Safari .
*/
_:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[multiple] {
  margin-bottom: calc(0.9rem - 2px);
  padding: 0;
}

/*
    Various browsers do not allow <option>s height to be specified.
    The ones I've found are:

    * IE11-
    * Chrome 38-
    * Opera 24-

    MAYBE NOT FOR PRODUCTION?
    The following techniques are messy and break if the font-family or font size changes.
    Maybe move them to the test CSS only so I can see if OTHER elements are falling off the grid.
*/
/* Individual height fixes moved to '_start-experimental.scss' */
/*
    1. Apply consistent small font size in all browsers.
    2. Prevent the element increasing the line-height of the parent.
*/
small {
  font-size: 80%;
  /* 1 */
  line-height: normal;
  /* 2 */
}

/*
    1. Add the correct font weight in Chrome, Edge, and Safari.
    2. Prevent increase in line-height.
*/
strong {
  font-weight: bolder;
  /* 1 */
  line-height: normal;
  /* 2 */
}

/*
    Prevent `sub` affecting `line-height` in all browsers.
*/
sub {
  position: relative;
  bottom: -0.25em;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

/*
    1. Correct display in unsupported browsers (https://caniuse.com/#feat=details).
    2. Remove the tapping delay from clickable elements.
*/
summary {
  display: block;
  /* 1 */
  -ms-touch-action: manipulation;
  /* 2 (IE10) */
  touch-action: manipulation;
  /* 2 */
  cursor: pointer;
}

summary:focus {
  outline: 2px solid rgba(83, 130, 164, 0.6);
  outline-offset: 2px;
}

/* Hide the details marker as we're supplying our own. */
summary::-webkit-details-marker {
  display: none;
}

details > summary::before {
  display: inline-block;
  content: '\25BA';
  margin-right: 0.5em;
  font-size: 0.75em;
  font-family: serif;
  vertical-align: top;
  transition: transform 0.2s ease;
}

details[open] > summary::before {
  transform: rotate(90deg);
}

/*
    Prevent `sup` affecting `line-height` in all browsers.
*/
sup {
  position: relative;
  top: -0.5em;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

/*
    1. Change the fill color to match the text color in all browsers.
       (needs more testing)
*/
svg {
  vertical-align: middle;
  fill: currentColor;
  /* 1 */
}

/*
    1. Correct overflow not hidden in IE 9-11.
*/
svg:not(:root) {
  overflow: hidden;
  /* 1 */
}

/*
    1. Opera Mini (no calc support).
    2. Calc to deduct any border-width.
*/
table {
  width: 100%;
  /* @TODO - possibly make this configurable to be 'natural' width but centered instead. (http://alistapart.com/article/web-typography-tables) */
  border-collapse: collapse;
  margin-bottom: 2.4rem;
  /* 1 */
  margin-bottom: calc(2.4rem - 1px);
  /* 2 */
  border: 1px solid #5382A4;
  background-color: #fff;
  border-spacing: 0;
}

/*
    1. Opera Mini (no calc support).
    2. Calc to deduct any border-width.
*/
td {
  padding-top: 1.2rem;
  padding-right: 1.2rem;
  padding-bottom: 1.2rem;
  /* 1 */
  padding-bottom: calc(1.2rem - 1px);
  /* 2 */
  padding-left: 1.2rem;
  border: 1px solid #5382A4;
}

/*
    1. Hide `template` in unsupported browsers (https://caniuse.com/#feat=template)
*/
template {
  display: none;
  /* 1 */
}

/*
    1. For IE, mainly.
    2. Edge 12+, Internet Explorer 11-. Without this it acts like overflow: scroll.
    3. Remove the margin in Firefox and Safari.
    4. Keep labels at the top of the container.
    5. Remove the tapping delay from clickable elements.
    5a. IE 10.
*/
textarea {
  min-height: 8.2rem;
  /* 1 */
  overflow: auto;
  /* 2 */
  margin-top: 0.2rem;
  margin-bottom: 0;
  /* 3 */
  padding-left: 0.6rem;
  padding-right: 0.6rem;
  border-width: 1px;
  border-radius: 3px;
  border-color: rgba(0, 0, 0, 0.2);
  border-style: solid;
  color: #333;
  background-color: #fff;
  font-size: inherit;
  font-family: inherit;
  font-style: inherit;
  font-weight: inherit;
  vertical-align: top;
  /* 4 */
  -ms-touch-action: manipulation;
  /* 5a */
  touch-action: manipulation;
  /* 5 */
  resize: vertical;
}

textarea:focus {
  box-shadow: 0 0 0 3px rgba(83, 130, 164, 0.5);
  outline: 0;
}

/*@if $input-focus-outline-width != false {
    textarea:focus {
        outline-width: $input-focus-outline-width;
        outline-style: $input-focus-outline-style;
        outline-color: $input-focus-outline-color;
        outline-offset: $input-focus-outline-offset;
    }
}*/
/*
    1. Opera Mini (no calc support).
    2. Calc to deduct any border-width.
*/
th {
  padding-top: 1.2rem;
  padding-right: 1.2rem;
  padding-bottom: 1.2rem;
  /* 1 */
  padding-bottom: calc(1.2rem - 1px);
  /* 2 */
  padding-left: 1.2rem;
  border: 1px solid #5382A4;
}

/*
    1. Either of these will make lists behave properly next to floated items.
       (https://paulbakaus.com/tutorials/css/block-formatting-contexts-and-lists)
       a. This causes problems with some decoration. E.g. if the last element in the list is a link,
          bottom borders get cropped, so using b instead.
       b. `flow-root` is the better option but support is low, so using table-cell as well.
*/
ul {
  margin-bottom: 2.4rem;
  display: table-cell;
  /* 1b */
  display: flow-root;
  /* 1b */
}

/*
    In IE, bullet characters can affect line-height. Also, there are differences in how the bullet
    characters are displayed, so using custom ones.
    @TODO - make this configurable.
    Also - base64 is bad for performance. Using raw svg instead.
    8px w/h means the bullets won't adjust to font-size.
    In Chrome, setting w/h to 100% instead gets the desired behavior, but the bullets collapse on
    other browsers and are invisible. I can't find a fix for this.

    Keep this for reference:
    ul li {
        list-style-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 8" width="8px" height="8px"><circle fill="currentColor" cx="4" cy="4" r="3"/></svg>');
    }

        ul ul li {
            list-style-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 8" width="8px" height="8px"><circle fill="none" stroke="currentColor" stroke-miterlimit="10" cx="4" cy="4" r="2.5"/></svg>');
        }

            ul ul ul li {
                list-style-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 8" width="8px" height="8px"><rect fill="currentColor" x="1" y="1" width="6" height="6"/></svg>');
            }
*/
@media screen and (min-width: 0\0) and (min-resolution: 72dpi) {
  /*
            1. 1px at 16px font-size. Should be 0.0625 but IE is 2 decimal-places only.
        */
  ul ul li {
    margin-bottom: -0.06em;
    /* 1 */
  }
  /*
                1. This is a bit of a magic number. It works - but I'm not sure why.
                   Probably to do with IE rounding.
            */
  ul ul ul li {
    margin-bottom: -0.02em;
    /* 1 */
  }
}

/*
    IE9 needs a further tweak to get it on the baseline:
*/
@media screen and (min-width: 0\0) and (min-resolution: 0.001dpcm) {
  ul ul ul li {
    margin-bottom: -0.04em;
  }
}

/*
    1. Allow video to center if container larger than video.
*/
video {
  display: block;
  /* 1 */
  max-width: 100%;
  height: auto;
  margin: 0 auto;
  /* 1 */
  background-color: #333;
}

/*
    1. Remove the tapping delay from clickable elements.
*/
[tabindex] {
  -ms-touch-action: manipulation;
  /* 1 (IE10) */
  touch-action: manipulation;
  /* 1 */
}

/*
    Specify the background color, font color, and drop shadow of text selections.
*/
::-moz-selection,
::selection {
  color: #fff;
  background-color: #b6cbda;
  text-shadow: none;
}

/*-------------------------------------------------------------------------------------------------|

    ACCESSIBILITY / ARIA
    Moved to it's own file. Still debating this.

|-------------------------------------------------------------------------------------------------*/
/*! Start CSS Accessibility. See SCSS file for documentation. */
/*

    Notes:

    I'm debating moving separating this from the core file.
    I'm not sure which approach I prefer.
    Will probably go down the route of only having optional stuff in separate files - not sure.
*/
/*-------------------------------------------------------------------------------------------------|

    ACCESSIBILITY / ARIA

|-------------------------------------------------------------------------------------------------*/
[aria-busy="true"] {
  cursor: progress;
}

/*
    Specify the pointer cursor of trigger elements. (S)
*/
[aria-controls] {
  cursor: pointer;
}

/*
    Specify the un-styled cursor of disabled, not-editable, or otherwise inoperable elements. (S)
*/
[disabled],
[aria-disabled] {
  cursor: default;
}

/*
    Address `[hidden]` styling not present in IE 8/9/10. (N)
*/
[hidden] {
  display: none;
}

/*
    Specify the style of visually hidden yet accessible elements. (S)
*/
[hidden][aria-hidden="false"] {
  clip: rect(0 0 0 0);
  position: absolute;
  display: inline;
  /*border: 0;
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    width: 1px;*/
}

a[hidden][aria-hidden="false"]:focus,
a[hidden][aria-hidden="false"]:active {
  clip: auto;
  position: static;
  /*height: auto;
        margin: 0;
        overflow: visible;
        width: auto;*/
}

/*-------------------------------------------------------------------------------------------------|

    UTILITIES
    Moved to it's own file. Still debating this.

-|------------------------------------------------------------------------------------------------*/
/*! Start CSS Utilities. See SCSS file for documentation. */
/*

    Notes:

    I'm debating moving separating this from the core file.
    I'm not sure which approach I prefer.
    Will probably go down the route of only having optional stuff in separate files - not sure.
*/
/*-------------------------------------------------------------------------------------------------|

    UTILITIES

-|------------------------------------------------------------------------------------------------*/
/*
    Clearfix: contain floats for modern browsers

    1. The space content is one way to avoid an Opera bug when the `contenteditable` attribute is #
       included anywhere else in the document.
       Otherwise it causes space to appear at the top and bottom of elements that receive the#
       `clearfix` class.

    2. The use of `table` rather than `block` is only necessary if using
       `:before` to contain the top-margins of child elements.
*/
.clearfix:before,
.clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */
}

.clearfix,
.clearfix:after {
  clear: both;
}

.no-css-only {
  display: none;
}

/*! End Start CSS */
/*------------------------------------------------------------------------------------------------*\
    Fall-Back Icons v1.0.0
    
    Designed for use with the basic [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)
    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+
    
\*------------------------------------------------------------------------------------------------*/
/*


    <!-- At the top of each page: -->
    <svg xmlns="http://www.w3.org/2000/svg" display="none">
        <symbol id="icon-triangle-down" viewBox="0 0 12 16">
            <path d="M1,6h10l-5,5L1,6z"></path>
        </symbol>
        <symbol id="icon-cross" viewBox="0 0 16 16">
            <path d="M15.5,2L14,0.5l-6,6l-6-6L0.5,2l6,6l-6,6L2,15.5l6-6l6,6l1.5-1.5l-6-6L15.5,2z"></path>
        </symbol>
        <symbol id="icon-menu" viewBox="0 0 16 16">
            <rect x="0" width="16" height="3"/>
            <rect x="0" y="6" width="16" height="3"/>
            <rect y="12" width="16" height="3"/>
        </symbol>
        <!-- Other <symbol>s... -->
    </svg>
    
    
    <!-- Where it's needed: -->
    <svg width="0" height="0" class="icon  icon--narrow" aria-label="About Us Submenu"><use xlink:href="#icon-triangle-down"></use></svg>
    <!-- Note the aria-label can be removed if equivelent text is already present or the icon is visual only -->

*/
/*
    1. Override display attribute.
*/
.icon {
  display: inline;
  /* [1] */
  fill: currentColor;
  width: 1.14285714286em;
  height: 1.14285714286em;
  /*width: 1.71428571429em;
    height: 1.71428571429em;*/
  /* No idea why, exactly, but this seems to be the best position, we long as we ... */
  /* ... prevent the icon affecting line-height: */
  /*
    -webkit-transform: scale(0.666);
    -moz-transform: scale(0.666);
    -ms-transform: scale(0.666);
    transform: scale(0.666);*/
}

.icon--narrow {
  /*margin: -0.5em -0.25em;*/
  width: 0.85714285714em;
}

_:-o-prefocus, :root .icon {
  vertical-align: middle;
}

/*
.icon symbol {
    width: 1.14285714286em;
    height: 1.14285714286em;
}*/
/*
    No transform support for Opera Mini, so hack it back to 16px with ems.
    Note, since Opera Mini doesn't support line-height, it will be vertically centered anyway.
    1. Hack also affects Opera 12 which is supported by the Original Mustard Cut, so turning off
       transform for this. Slight difference in position acceptable (lower).
*/
/*
_:-o-prefocus, :root .icon {
    width: 1.14285714286em;
    height: 1.14285714286em;
    transform: none; /* [1] *
}*/
.icon-wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

/* ---------------------------------------------------------------------------------------------- */
/* --| FUNCTIONS AND MIXINS |-------------------------------------------------------------------- */
/* ---------------------------------------------------------------------------------------------- */
/* --| BASE |------------------------------------------------------------------------------------ */
/* ---------------------------------------------------------------------------------------------- */
/* --| FALL-BACK PATTERNS |---------------------------------------------------------------------- */
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Start-CSS Settings v1.0.0

    Fall-Back is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+


    Any double-classing (e.g. `.class.class`) is deliberate and intended to increase specificity.
    This allows any applicable Start-CSS declarations to be overridden.
    E.g. `.{pattern} .{pattern}__child` would `a[href]`, but just `.{pattern}` wouldn't, so we use
    `.{pattern}.{pattern}`

|-------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Over Panel Pattern v2.0.0
|-------------------------------------------------------------------------------------------------*/
/* -- Basic/fallback layout --------------------------------------------------------------------- */
/*
        1. Helps compatibiliy with Nav-Bar. No down-sides I can see. May have to revise if some
           become apparent.
    */
.over-panel {
  width: 100%;
  /* [1] */
}

/*
		This is a bit of a hack, but it's a way of letting JS know that this CSS has loaded.
		It doesn't work for Opera Mini, but I'm happy to provide this browser only with the
		unenhanced version.
        UPDATE: Due to problem with FOBP, now checking for existence of class in styesheet earlier
        on, so this isn't needed:
	*/
/*.over-panel::before {
		content: 'CSS Loaded';
        display: none;
	}*/
.js-over-panel {
  border: 0;
}

.over-panel-control {
  display: none;
}

.over-panel__contents {
  background-color: #5382A4;
  color: #fff;
  padding: 0;
}

.over-panel__contents a {
  color: #dbdbdb;
}

.over-panel__contents a:hover,
.over-panel__contents a:active,
.over-panel__contents a:focus {
  color: #ededed;
}

/* -----------------------------------------------------------------------------------------------*/
/* ********************************************************************************************** */
/* -- Enhanced layout --------------------------------------------------------------------------- */
@media only screen and (max-width: 32.9375em) {
  /*
            1. Helps compatibiliy with Nav-Bar. No down-sides I can see. May have to revise if some
               become apparent.
        */
  /*
			1. Make sure the over-panel is on top.
		*/
  .js-over-panel .over-panel {
    position: absolute;
    /* [1] */
    left: 0;
    width: 100%;
  }
  .js-over-panel-control.over-panel-control {
    display: inline-block;
  }
  /*
            This extra wrapper allows the content of the panel to be absolutely positioned so that the
            container doesn't create a positioning context which would prevent the overlay from filling
            the body.
            The :target id needs to stay in actual position so the fall-back works, so everything
            affected by the :target must come after or inside the element with the id, but we want to
            allow the position of the controls to be as flexible as possible, so some trickery is
            needed.


            1. Make the over-panel invisible in a way that's transition-able but also removes from tab
               order.
        */
  .js-over-panel .over-panel__contents {
    position: absolute;
    left: 0;
    top: auto;
    width: 100%;
    visibility: hidden;
    /* [1] */
  }
  /*
            1. Make the over-panel visible in a way that's transition-able.
        */
  .js-over-panel_is-open .over-panel__contents {
    visibility: visible;
    /* [1] */
  }
  /* Slide effect: */
  .js-over-panel .over-panel--slide .over-panel__contents {
    -webkit-transform: translateY(-100%);
    -moz-transform: translateY(-100%);
    -ms-transform: translateY(-100%);
    -o-transform: translateY(-100%);
    transform: translateY(-100%);
  }
  .js-over-panel_is-animating.over-panel--slide .over-panel__contents {
    -webkit-transition: -webkit-transform ease 0.8s, visibility 0s 0.8s ease;
    -moz-transition: -moz-transform ease 0.8s, visibility 0s 0.8s ease;
    -o-transition: -o-transform ease 0.8s, visibility 0s 0.8s ease;
    transition: transform ease 0.8s, visibility 0s 0.8s ease;
  }
  .js-over-panel_is-open.over-panel--slide .over-panel__contents {
    -webkit-transform: translateY(0);
    -moz-transform: translateY(0);
    -ms-transform: translateY(0);
    -o-transform: translateY(0);
    transform: translateY(0);
    -webkit-transition: -webkit-transform ease 0.8s;
    -moz-transition: -moz-transform ease 0.8s;
    -o-transition: -o-transform ease 0.8s;
    transition: transform ease 0.8s;
  }
  /* Fade effect: */
  .js-over-panel .over-panel--fade .over-panel__contents {
    opacity: 0;
  }
  .js-over-panel_is-animating.over-panel--fade .over-panel__contents {
    -webkit-transition: opacity ease 0.8s, visibility 0s 0.8s ease;
    -moz-transition: opacity ease 0.8s, visibility 0s 0.8s ease;
    -o-transition: opacity ease 0.8s, visibility 0s 0.8s ease;
    transition: opacity ease 0.8s, visibility 0s 0.8s ease;
  }
  .js-over-panel_is-open.over-panel--fade .over-panel__contents {
    opacity: 1;
    -webkit-transition: opacity ease 0.8s;
    -moz-transition: opacity ease 0.8s;
    -o-transition: opacity ease 0.8s;
    transition: opacity ease 0.8s;
  }
  /*
            1. These override button styles defined as part of StartCSS. I may consider making these
               customisable via more variables.
			2. Ensure the control is above the overlay.
        */
  .js-over-panel-control.over-panel-control {
    display: block;
    margin: 0;
    padding-left: 0.5625em;
    padding-right: 0.5625em;
    padding-bottom: 0;
    /* 1 */
    padding-top: 0;
    /* 1 */
    border: 0;
    border-radius: 0;
    line-height: 2.25em;
    text-decoration: none;
    outline: 0;
    box-shadow: none;
    /* 1 */
    color: #fff;
    background-color: #5382A4;
    position: relative;
    z-index: 1;
    /* [2] */
  }
  .js-over-panel-control.over-panel-control:hover,
  .js-over-panel-control.over-panel-control:active,
  .js-over-panel-control.over-panel-control:focus {
    border: 0;
  }
  .js-over-panel-control.over-panel-control:hover,
  .js-over-panel-control.over-panel-control:active,
  .js-over-panel-control.over-panel-control[aria-expanded="true"] {
    color: #fff;
    background-color: #3b5c75;
  }
  .js-over-panel-control.over-panel-control:focus {
    color: #fff;
    background-color: #476f8c;
  }
  .js-over-panel-control.over-panel-control .icon--is-open,
  .js-over-panel-control.over-panel-control[aria-expanded="true"] .icon--is-closed {
    display: none;
  }
  .js-over-panel-control.over-panel-control .icon--is-closed,
  .js-over-panel-control.over-panel-control[aria-expanded="true"] .icon--is-open {
    display: inline;
  }
  /*.over-panel__open.over-panel__open {
            display: block;
        }*/
  /*
            Fix for Opera Mini vertical centering:
        */
  /* Hide the open control: */
  /*
            Taking this out for now is leaving it visible doesn't seem to hurt (though accessibility?)
            but hiding it can cause other elements to jump around due to flexbox.
            Maybe use visibility, not sure.
        */
  /*.js-over-panel_is-open .over-panel__open.over-panel__open {
            display: none;
        }*/
  /* Show the close control and move on above the overlay: */
  /*.js-over-panel_is-open .over-panel__close.over-panel__close {
            z-index: 1002; /* @var *
            display: block;
            position: absolute;
            top: 0;
            right: 0;
        }*/
  /*
            1. This is the obvious place for this rule but there's a weird chrome bug that means
               the postiion/dimensions are ignore if it's initiallty hidden.
               Moving to the is-open declaration fixes this, as it only gets applie when it's
               visisble.
        */
  .js-over-panel .over-panel__overlay {
    display: block;
    z-index: -1;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    border: 0;
    text-decoration: none;
    visibility: hidden;
    background: #fff;
    opacity: 0;
    -webkit-transition: opacity 0.5s ease;
    -moz-transition: opacity 0.5s ease;
    -o-transition: opacity 0.5s ease;
    transition: opacity 0.5s ease;
    -webkit-box-shadow: 0 0 10px 5px #000;
    box-shadow: 0 0 10px 5px #000;
  }
  /* Bring the overlay to the front and fade in when there's an over-panel target: */
  .js-over-panel_is-open .over-panel__overlay {
    position: fixed;
    z-index: 0;
    opacity: 0.5;
    visibility: visible;
  }
  .js-over-panel-control .over-panel__overlay:hover,
  .js-over-panel-control .over-panel__overlay:active,
  .js-over-panel-control .over-panel__overlay:focus {
    border: 0;
    text-decoration: none;
    background: #fff;
  }
}

/* ---------------------------------------------------------------------------------------------- */
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Start-CSS Settings v1.0.0

    Fall-Back is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+


    Any double-classing (e.g. `.class.class`) is deliberate and intended to increase specificity.
    This allows any applicable Start-CSS declarations to be overridden.
    E.g. `.{pattern} .{pattern}__child` would `a[href]`, but just `.{pattern}` wouldn't, so we use
    `.{pattern}.{pattern}`



|-------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Nav Bar Pattern v2.0.0
|-------------------------------------------------------------------------------------------------*/
/* -- Basic/fallback layout --------------------------------------------------------------------- */
/* -- .nav-bar -------------------------------------------------------------------------------*/
/*
        1. Helps to position above subsequent elements so subnavs sit on top.
    */
.nav-bar.nav-bar {
  background-color: #5382A4;
  position: relative;
  z-index: 9999;
  /* [1] */
}

/*
		This is a bit of a hack, but it's a way of letting JS know that this CSS has loaded.
		It doesn't work for Opera Mini, but I'm happy to provide this browser only with the
		unenhanced version.
        UPDATE: Due to problem with FOBP, now checking for existence of class in styesheet earlier
        on, so this isn't needed:
	*/
/*.nav-bar::before {
		content: 'CSS Loaded';
        display: none;
	}*/
.js-nav-bar {
  border: 0;
}

/* -------------------------------------------------------------------------------------------*/
/* -- .nav-bar__title ------------------------------------------------------------------------*/
/*
        1. For IE 9 and FF 21-.
    */
/****
    .nav-bar .nav-bar__title {
        white-space: nowrap; /* [1] * /
        vertical-align: top; /* [1] * /
        //--@include fallback-rem(min-height, $fallback--nav-bar--height);

        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;

        //display: -webkit-flex;
        //display: -ms-flexbox;
        //display: flex;

        -webkit-box-pack: justify;
        -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
        justify-content: space-between;

        //-webkit-box-pack: justify;
        //   -ms-flex-pack: justify;
        // justify-content: space-between;
    }
****/
/*
        Note A.
        We want elements to fill the space to maximise actionable areas if it's supported.
        This requirement becomes apparent when using a Title and an button between the title and
        the nav items.
        We also need things positioned correctly in older browsers. A bunch of scattered
        declarations help achieve this. I may need to re-think it if it turns out not to be very
        robust, but I was hoping to avoid the need for extra containers.
    */
@supports (-webkit-flex-wrap: wrap) or (flex-wrap: wrap) {
  .nav-bar .nav-bar__main {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-wrap: wrap;
    flex-wrap: wrap;
  }
}

/*
        1. Related to Note A, we specifically want the title fill the available space.
        2. But in older browsers we just want it pushed left.
        3. Helps compatibility with Over-Panel. No down-sides I can see. May have to revise if some
           become apparent.

        -. For IE 9 and FF 21-.
    */
.nav-bar .nav-bar__title {
  -webkit-flex: 1 0 auto;
  /* [1] */
  flex: 1 0 auto;
  /* [1] */
  background: #5382A4;
  white-space: nowrap;
  position: relative;
  /* [1] */
  z-index: 1;
  /* [1] */
}

/*
            1. Related to Note A; in older browsers we just want it pushed left.
        */
.nav-bar .nav-bar__title .nav-bar__link {
  float: left;
  /* [1] */
  height: 1.5em;
  line-height: 1.5em;
  font-family: Arial, Helvetica, sans-serif;
  font-weight: bold;
  font-style: normal;
  font-size: 1.5em;
  white-space: nowrap;
}

@supports (-webkit-flex-wrap: wrap) or (flex-wrap: wrap) {
  .nav-bar .nav-bar__title {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-wrap: wrap;
    flex-wrap: wrap;
  }
  /*
            This is a little flakey.
            It assumes that we want any links to take up as much space as possible.
            Anything else (e.g. buttons) would not change size.
            Will have to see how this plays out.
        */
  .nav-bar .nav-bar__title .nav-bar__link {
    -webkit-flex: 1 0 auto;
    flex: 1 0 auto;
  }
}

/****
    @media only screen and (max-width: $fallback--nav-bar--breakpoint--enhanced) {
        // Apply the table-cell hack to IE9.
        _::selection, .nav-bar__title > * {
            display: table-cell\0 !important;
            width: 1px\0;
        }
        // Note this isn't very robust:
        _::selection, .nav-bar__title > div {
            display: table-cell\0 !important;
            width: 100%\0;
            text-align: center;
        }

        // Without flexbox positioning doesn't sort itself out, so use text-align to position the title.
        // If there's no control to the left:
        _::selection, .nav-bar__title > div:first-child {
            text-align: left;
        }
        // If there's no control to the right
        _::selection, .nav-bar__title > div:last-child {
            text-align: right;
        }


        //Apply hacks for old FF.
        _:-moz-tree-row(hover), .nav-bar__title {
            display: -moz-box;
            -moz-box-pack: justify;
            width: 100%;
            text-align: center;
        }

        _:-moz-tree-row(hover), .nav-bar__title >  div {
            -moz-box-flex: 1;
        }
    }
*/
/* -------------------------------------------------------------------------------------------*/
/* -- .nav-bar__main ------------------------------------------------------------------------*/
/*
        1. Duplicating parent background-color here. There HAS to be a color here for the pattern
           to work, the parent background-color is there to allow things to be NOT BROKEN on
           browsers that don't support HTML semantic elements.

        2. Prevent any overflow and possible contain floats.
    */
.nav-bar .nav-bar__main {
  background-color: #5382A4;
  /* 1 */
  overflow: hidden;
  /* 2 */
}

/* -------------------------------------------------------------------------------------------*/
/* -- .nav-bar__items ------------------------------------------------------------------------*/
/*
        1. Related to Note A. Force this on to its own line.
    */
.nav-bar .nav-bar__items {
  width: 100%;
  /* 1 */
  list-style-type: none;
  padding: 0;
  margin: 0;
  /****float: left;

        -webkit-box-flex: 0;
            -webkit-flex: 0 1 auto;
                -ms-flex: 0 1 auto;
                    flex: 0 1 auto;*/
}

.nav-bar .nav-bar__item {
  margin: 0;
}

.nav-bar .nav-bar__item::before {
  display: none;
}

/*.nav-bar .nav-bar__item:not(:first-child) {
            border-style: $fallback--nav-bar__link--border-style;
            border-color: $fallback--nav-bar__link--border-color;
            border-left-width: $fallback--nav-bar__link--border-width;
        }

        .nav-bar .nav-bar__item:last-child {
            border-right-width: $fallback--nav-bar__link--border-width;
        }* /

    /* -------------------------------------------------------------------------------------------*/
/* -- .subnav --------------------------------------------------------------------------------*/
.nav-bar .subnav {
  padding: 0;
  margin-left: 1.125em;
  background-color: #314c60;
}

.nav-bar .subnav__items {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.nav-bar .subnav__items::before,
.nav-bar .subnav__items::after {
  content: " ";
  display: table;
}

.nav-bar .subnav__items::after {
  clear: both;
}

.nav-bar .subnav__item {
  margin: 0;
  float: left;
}

.nav-bar .subnav__items--stacked .subnav__item {
  float: none;
  margin-left: 1.125em;
}

.nav-bar .subnav__item::before {
  display: none;
}

/* -------------------------------------------------------------------------------------------*/
/* -- .nav-bar__link, .subnav__link[href]  ----------------------------------------------------------*/
/*
		1. These override button styles defined as part of StartCSS. I may consider making these
		   customisable via more variables.
	*/
.nav-bar .nav-bar__link[href],
.nav-bar .subnav__link[href],
.nav-bar .subnav__heading {
  display: block;
  margin: 0;
  padding-left: 0.5625em;
  padding-right: 0.5625em;
  padding-bottom: 0;
  /* 1 */
  padding-top: 0;
  /* 1 */
  border: 0;
  border-radius: 0;
  line-height: 2.25em;
  text-decoration: none;
  outline: 0;
  box-shadow: none;
  /* 1 */
}

.nav-bar .nav-bar__link[href]:hover,
.nav-bar .nav-bar__link[href]:active,
.nav-bar .nav-bar__link[href]:focus,
.nav-bar .subnav__link[href]:hover,
.nav-bar .subnav__link[href]:active,
.nav-bar .subnav__link[href]:focus {
  border: 0;
}

.nav-bar__link--centered {
  text-align: center;
}

/*
        Fix for Opera Mini vertical centering:
        (affects Opera 12.10-16 as well)
    */
_:-o-prefocus, body:last-child .nav-bar .nav-bar__link[href],
_:-o-prefocus, body:last-child .nav-bar .subnav__link[href],
_:-o-prefocus, body:last-child .nav-bar .subnav__heading {
  line-height: 2.25em !important;
}

.nav-bar .nav-bar__link[href] {
  color: #fff;
  background-color: #5382A4;
}

.nav-bar .subnav__heading {
  color: #fff;
}

.nav-bar .subnav__link[href] {
  color: #fff;
  background-color: #314c60;
}

/*
        Provide interaction effects for nav-bar links that ARE links:
        (this excludes submenu heading links - note that submenu links should never also be
        submenu heading links)
    */
.nav-bar .nav-bar__link[href]:hover,
.nav-bar .nav-bar__link[href]:active,
.nav-bar .nav-bar__link[href] [aria-expanded="true"] {
  color: #fff;
  background-color: #3b5c75;
}

.nav-bar .nav-bar__link[href]:focus {
  color: #fff;
  background-color: #476f8c;
}

.nav-bar .subnav__link[href]:hover,
.nav-bar .subnav__link[href]:focus,
.nav-bar .subnav__link[href]:active {
  color: #fff;
  background-color: #426782;
}

.nav-bar .subnav__control {
  display: none;
}

/* -------------------------------------------------------------------------------------------*/
/* -----------------------------------------------------------------------------------------------*/
/* ********************************************************************************************** */
/* -- Enhanced layout --------------------------------------------------------------------------- */
/*
    This layout can only be used if JS is there to support the toggling of hidden submenus.
    (CSS only attempts weren't good enough)
    So, scoping these styles to the 'js-nav-bar' class.
*/
@media only screen and (min-width: 33em) {
  /*
            1. Flex is only really needed for 'additional' to fill up the space.
               I don't think this would actually do any harm...
        */
  .js-nav-bar .nav-bar {
    position: relative;
    z-index: 1000;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    /* 1 */
  }
  /*
			This pseudo element helps to cover any subnavs to stop them being visible in the main
			nav-bar.
		*/
  .js-nav-bar .nav-bar::before {
    content: "";
    display: block;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: -1;
    background-color: #5382A4;
  }
  /*
            Child items are floated, so clear those.
        */
  .js-nav-bar .nav-bar::after {
    content: " ";
    display: table;
    clear: both;
  }
  /*
            1. Floating left to allow 'additional' to appear on the same line, but width 100% to
               make sure any subnavs are properly obscured, otherwise it looks weird.
               However, this makes 'additional' collapse to it's content.
               In the case of search form, this means the form is smaller than it could be.
               It's still usable, but ...

            2. ... flex makes this better ...
        */
  .js-nav-bar .nav-bar__main {
    float: left;
    /* 1 */
    -webkit-flex: 1 0 auto;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto;
    /* 2 */
  }
  /*
            1. ... but we need to turn off 100% width if we're using flex.
        */
  @supports (display: -webkit-flex) or (display: -ms-flex) or (display: flex) {
    .js-nav-bar .nav-bar__main {
      width: auto;
      /* 1 */
    }
  }
  /*
            Related to Note A. Reset the positioning.
        */
  .js-nav-bar .nav-bar__title {
    -webkit-flex: 0 1 auto;
    flex: 0 1 auto;
  }
  /*
            Related to Note A. Everything but the title pushed right.
        */
  .js-nav-bar .nav-bar__title ~ * {
    float: right;
  }
  /*
            Related to Note A. Reset the positioning and width.
        */
  .js-nav-bar .nav-bar__items {
    width: auto;
    float: none;
  }
  /*
            Add dividers.
            Dividers created by adding right borders to nav-bar__items.
        */
  .js-nav-bar .nav-bar__title,
  .js-nav-bar .nav-bar__item {
    border-style: solid;
    border-color: rgba(255, 255, 255, 0.2);
    border-top-width: 0;
    border-bottom-width: 0;
    border-left-width: 0;
    border-right-width: 1px;
  }
  .js-nav-bar .nav-bar__link[href] + .subnav__control {
    border-style: dashed;
    border-color: rgba(255, 255, 255, 0.3);
    border-top-width: 0;
    border-bottom-width: 0;
    border-left-width: 1px;
    border-right-width: 0;
  }
  /*
            Prevent anything wrapping (fixed height is crucial to making this work),
            and make things float
        */
  .js-nav-bar .nav-bar__title,
  .js-nav-bar .nav-bar__item,
  .js-nav-bar .nav-bar__link[href],
  .js-nav-bar .subnav__link[href],
  .js-nav-bar .subnav__heading {
    white-space: nowrap;
    float: left;
  }
  .js-nav-bar .subnav__items--stacked .subnav__link[href] {
    float: none;
  }
  /*
            Set-up slide toggling for subnavs:

			1. This puts the subnav behind the covering pseudo element. See .nav-bar::before, above.
            2. OSX/iOS needs this:
		*/
  .js-nav-bar .subnav {
    position: absolute;
    visibility: hidden;
    left: 0;
    right: 0;
    top: 0;
    z-index: -2;
    /* 1 */
    padding: 0;
    margin: 0;
    padding: 0;
    height: 2.25em;
    /* 2 */
    -webkit-transition: margin-top 0.5s ease, visibility 0s   ease 0.5s;
    -moz-transition: margin-top 0.5s ease, visibility 0s   ease 0.5s;
    -o-transition: margin-top 0.5s ease, visibility 0s   ease 0.5s;
    transition: margin-top 0.5s ease, visibility 0s   ease 0.5s;
  }
  .js-nav-bar .subnav__heading {
    display: none;
  }
  .js-nav-bar .subnav__control {
    display: block;
  }
  .js-nav-bar .subnav__control .icon--is-open,
  .js-nav-bar .subnav__control[aria-expanded="true"] .icon--is-closed {
    display: none;
  }
  .js-nav-bar .subnav__control .icon--is-closed,
  .js-nav-bar .subnav__control[aria-expanded="true"] .icon--is-open {
    display: inline;
  }
  .js-nav-bar .subnav__control[aria-expanded="true"] ~ .subnav {
    visibility: visible;
    margin-top: 2.25em;
    -webkit-transition: margin-top 0.5s ease;
    -moz-transition: margin-top 0.5s ease;
    -o-transition: margin-top 0.5s ease;
    transition: margin-top 0.5s ease;
  }
  /*
            1. Prevent content from increasing height of element.
        */
  .js-nav-bar .subnav__control[data-content]::before {
    content: attr(data-content);
    display: inline;
    vertical-align: top;
    /* 1 */
  }
  .js-nav-bar .subnav__items {
    float: left;
  }
  .js-nav-bar .nav-bar .subnav__items--stacked .subnav__item {
    margin-left: 0;
  }
  /*
            1. The 9999 hack forces this element to take up as much room as it can.
               (See http://joren.co/flex-grow-9999-hack/)
        */
  .js-nav-bar .nav-bar__additional {
    background-color: #5382A4;
    float: right;
    /* - this causes problems on Firefox on Mac. Investigate before reinstating.
            -webkit-flex: 9999 0 auto;
                -ms-flex: 9999 0 auto;
                    flex: 9999 0 auto; /* 1 */
  }
  /*
            This zeros out Start-CSS form margin. Probably not the most robust.
        */
  .js-nav-bar .nav-bar__additional > form {
    margin-bottom: 0;
  }
  /*
            This will probably be better off in utility classes, but that introduces more
            dependencies.
            An alternative could be:
            ```
            .nav-bar .nav-bar__additional--push-end > * {
                float: right;
            }
            ```
            but I like the idea of controlling this from the parent, rather than an unknown child.

        */
  .js-nav-bar .nav-bar__additional--push-end {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    /* 1 */
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end;
  }
}

/* -----------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Start-CSS Settings v1.0.0

    Fall-Back is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)
    
    This determines a browser support base of:
    
    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+
    
    
    Any double-classing (e.g. `.class.class`) is deliberate and intended to increase specificity.
    This allows any applicable Start-CSS declarations to be overridden.
    E.g. `.{pattern} .{pattern}__child` would `a[href]`, but just `.{pattern}` wouldn't, so we use
    `.{pattern}.{pattern}`
    
|-------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Search Form Pattern v2.0.0
|-------------------------------------------------------------------------------------------------*/
/* -- Basic/fallback layout --------------------------------------------------------------------- */
/* -- .search-form ---------------------------------------------------------------------------*/
/*
        1. Prevent extra bottom space when form is inside a container.
    */
.search-form.search-form {
  background: #5382A4;
  display: -moz-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 0;
  width: 100%;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  vertical-align: top;
}

@media screen and (min--moz-device-pixel-ratio: 0) and (min-resolution: 0.001dpcm) {
  .search-form.search-form {
    display: block;
  }
}

@supports (-moz-appearance: none) and (list-style-type: japanese-formal) {
  .search-form.search-form {
    display: flex;
  }
}

.search-form.search-form::before,
.search-form.search-form::after {
  content: " ";
  display: table;
}

.search-form.search-form::after {
  clear: both;
}

.search-form---restrict-width {
  max-width: 25em;
}

/* -------------------------------------------------------------------------------------------*/
/* -- .search-form__field --------------------------------------------------------------------*/
/*
        1. Override default size attr value - mainly for Opera mini which wierdley needs both
           width AND min-width.
    */
.search-form .search-form__field {
  position: relative;
  z-index: 1;
  border-radius: 0;
  border: 0;
  background-color: #fff;
  color: #333;
  height: 1.5em;
  line-height: 1.5em;
  margin: 0.1875em 0 0.1875em 0.1875em;
  padding: 0.1875em;
  float: left;
  -moz-box-flex: 1;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 1%;
  /* [1] */
  min-width: 1%;
  /* [1] */
}

@media screen and (min--moz-device-pixel-ratio: 0) and (min-resolution: 0.001dpcm) {
  .search-form .search-form__field {
    width: auto;
  }
}

@supports (-moz-appearance: none) and (list-style-type: japanese-formal) {
  .search-form .search-form__field {
    width: 1%;
  }
}

.search-form .search-form__field:focus {
  background-color: #ffffdc;
}

/* -------------------------------------------------------------------------------------------*/
/* -- .search-form__submit -------------------------------------------------------------------*/
/*
    */
.search-form .search-form__submit {
  position: relative;
  z-index: 1;
  border-radius: 0;
  border: 0;
  background: #fafbfc;
  color: #333;
  height: 1.875em;
  line-height: 0;
  margin: 0.1875em 0.1875em 0.1875em 0;
  padding: 0 0.375em;
  float: left;
  -moz-box-flex: 0;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.search-form .search-form__submit:hover,
.search-form .search-form__submit:focus {
  background-color: #fafbfc;
}

/*.search-form .search-form__submit svg {
            height: $fallback--search-form--field-height;
            width: $fallback--search-form--field-height;
        }*/
/* -------------------------------------------------------------------------------------------*/
/* -----------------------------------------------------------------------------------------------*/
/* ********************************************************************************************** */
/* -- Enhanced layout --------------------------------------------------------------------------- */
@media only screen and (max-width: 32.9375em) {
  .search-form .search-form__collapse {
    width: 100%;
  }
}

@media only screen and (min-width: 33em) {
  /*
            1. Reinstate all flexbox for enhanced view as no wrapping needs to occure
            (FF8-27 issue describbed above)
        */
  .search-form.search-form {
    display: -moz-box;
    /* [1] */
    display: flex;
    /* [1] */
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  }
  .search-form .search-form__field {
    width: auto;
  }
}

/* ---------------------------------------------------------------------------------------------- */
/*------------------------------------------------------------------------------------------------*\

    Designed for use with the basic [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)
    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+

\*------------------------------------------------------------------------------------------------*/
html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}

/*
    This outer-wrap is needed for IE 10-11.
    If you're not supporting those browsers, you do not need to include an element with this class.
*/
.sticky-footer-outer-wrap {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 100%;
}

.sticky-footer-outer-wrap > .sticky-footer-wrap {
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  width: 100%;
}

/**
 * 1. Avoid the IE 10-11 `min-height` bug.
 * 2. Set `flex-shrink` to `0` to prevent some browsers from
 *    letting these items shrink to smaller than their content's default
 *    minimum size. See http://bit.ly/1Mn35US for details.
 * 3. Use `%` instead of `vh` since `vh` is buggy in older mobile Safari.
 */
.sticky-footer-wrap {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  /* 1, 3 */
}

.sticky-footer-wrap > * {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  /* 2 */
  margin: 0;
  padding: 0;
}

.sticky-footer-expand {
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  /* 2 */
  margin: 0;
  padding: 0;
  width: 100%;
}

.sticky-footer {
  margin: 0;
  padding: 0;
}

/* IE9 hacks: */
@media all and (min-width: 0\0) and (min-resolution: 0.001dpcm) {
  .sticky-footer-wrap {
    display: table;
    width: 100%;
  }
  .sticky-footer-expand {
    display: table-row;
    height: 100%;
  }
}

/*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*\

    Clarification for self:
    Since this pattern is intented for use on logos, and since logos are an integral part of
    branding, this pattern is not ONLY intended as a CSS fallback.
    The markup is really important to provide an image of the logo even if CSS fails or is cut.

    However, since these patterns are intended for use with the CSS Mustard Cut (original) then
    styles for older browsers are omitted here since they won't load.
\*------------------------------------------------------------------------------------------------*/
/*
	Make the container fit the content.
    Note: `*:not(body)` avoids clash with Modernizr-added class.
    1. IE9 needs this to avoid extra height. (Others too?)
*/
.svg:not(html) {
  display: inline-block;
  max-width: 100%;
  vertical-align: middle;
  /* [1] */
}

/*
	Zero out any inherited margins and padding for child elements.
    Note: `*:not(body)` avoids clash with Modernizr-added class.
*/
.svg > *:not(body) {
  margin: 0;
  padding: 0;
}

/*
    Set the default link styles based on the settings.
    The mixin allows variants to be easily generated.
*/
/*
        1. Make the link fit the content.
        2. Provide positioning context for the pseudo element.
        3. Remove underline on some older browsers (Android 2.x mainly)
        4. IE9 needs this to avoid extra height. (Others too?)
    */
.svg .svg__link {
  display: inline-block;
  /* [1] */
  position: relative;
  /* [2] */
  text-decoration: none;
  /* [3] */
  vertical-align: middle;
  /* [4] */
  background-color: #fff;
  border-width: 1px;
  border-style: solid;
  border-color: #999;
}

.svg .svg__link:hover,
.svg .svg__link:active,
.svg .svg__link:focus {
  text-decoration: none;
  background-color: #ffdd79;
  border-width: 1px;
  border-style: 1px;
  border-color: 1px;
}

/*
        Objects inside links prevent the link from functioning, this hack fixes
        that. `pointer-events: none;` would solve it but support isn't good
        enough (http://caniuse.com/#search=pointer-events).

        1. This is needed for IE9+ or hover effects don't work over images
           embedded in the SVG.
    */
.svg .svg__link:after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: rgba(0, 0, 0, 0);
  /* [1] */
}

/*
        1. Remove gap below.
    */
.svg .svg__image {
  vertical-align: top;
  /* [1] */
}

/*
        1. Prevent pointer-events blocking link action in supporting browsers.
    */
.svg .svg__link .svg__image {
  pointer-events: none;
  /* [1] */
}

/*
        Allows the fallback text to show ONLY if CSS is available AND the SVG fails to load (the PNG is
        hidden if SVG is supported so that won't be an issue).
    */
.svg .svg__fallback-text-alpha::before {
  content: attr(data-content);
}

/*
        Hide the fallback text ONLY if CSS is available (but not from screenreaders).
    */
.svg .svg__fallback-text-beta {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/*------ Fixed Height ------*/
/*
        Set this to your required height.
        If you need more variants, create separate modification classes instead.
    */
/*
        NOTE: FF 32- (XP and Win8) seems to set a 3xheight width on initial page load / force refresh.
        If any relevent properties are altered or page is normally refreshed, it snaps to the correct
        width. UNRESOLVED.
    */
.svg--fixed-height {
  height: 36px;
  max-height: 36px;
}

.svg--fixed-height .svg__link,
.svg--fixed-height .svg__image {
  height: 28px;
  max-height: 28px;
}

.svg--fixed-height .svg__link {
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

/*
        1. Allow pattern to contract.
    */
.svg--fixed-height .svg__link,
.svg--fixed-height .svg__image {
  max-width: 100%;
  /* [1] */
}

/*
        Allow the fallback image to scale properly.
        1. IE6 - can be removed if unnecessary.
    */
.svg--fixed-height .svg__fallback-image {
  max-width: 100%;
  max-height: 28px;
  height: auto;
}

.svg--fixed-height .svg__link {
  padding: 3px;
  border-width: 1px;
}

.svg--fixed-height .svg__link:hover,
.svg--fixed-height .svg__link:active,
.svg--fixed-height .svg__link:focus {
  border-width: 1px;
}

/*------ Fluid ------*/
/*
       1. Force the svg wrapper and link to fill their containers.
    */
.svg--fluid,
.svg--fluid .svg__link {
  display: block;
  /* [1] */
  width: 100%;
  /* [1] */
}

.svg--fluid .svg__link {
  padding: 3px;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/*
       1. Force the object and fallback image to proportionally fill their
          containers, overriding attribute values.
    */
.svg--fluid .svg__image,
.svg--fluid .svg__fallback-image {
  height: auto;
  /* [1] */
  width: 100%;
  /* [1] */
}

.svg--fluid .svg__fallback-text {
  position: relative;
  left: 3px;
}

/*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*\
\*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*\
    Import Fall-Back vars:

    Slightly hacky way of allowing the main UI colour of this pattern to be:
     - base-ui colour (if set)
     - otherwise #999
     - but can be specifically overridden
\*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*/
/* -- Basic styles ------------------------------------------------------------------------------ */
.cookie_notice {
  position: fixed;
  width: 100%;
  bottom: 0;
  z-index: 2000;
  padding: 0.75em;
  background-color: #000;
  color: #fff;
  opacity: 1;
  -webkit-transition: opacity 1s ease 0s, z-index 1s ease 1s;
  transition: opacity 1s ease 0s, z-index 1s ease 1s;
}

.cookie_notice--close {
  opacity: 0;
  z-index: 0;
}

.cookie_notice .cookie_notice__message {
  display: table-cell;
  width: 100%;
}

.cookie_notice .cookie_notice__message a[href] {
  color: #d8e3eb;
}

.cookie_notice .cookie_notice__message a[href]:hover,
.cookie_notice .cookie_notice__message a[href]:active,
.cookie_notice .cookie_notice__message a[href]:focus {
  color: #94b3c9;
}

.cookie_notice .cookie_notice__action {
  display: table-cell;
}

/* ---------------------------------------------------------------------------------------------- */
/* ---------------------------------------------------------------------------------------------- */
/* --| PATTERNS |-------------------------------------------------------------------------------- */
main > :not(.full-width) {
  max-width: 64rem;
  margin-left: auto;
  margin-right: auto;
}

.full-width {
  margin-left: -2.4rem;
  margin-right: -2.4rem;
}

.hero.hero {
  margin-top: -2.4rem;
  margin-bottom: 2.4rem;
  min-width: 250px;
}

.hero .hero__text {
  position: absolute;
  top: 2.5rem;
  left: 4rem;
  color: #fff;
}

.hero__text h1 {
  font-size: 3rem;
  line-height: 1.2;
  margin-bottom: 2vw;
}

.hero__text p {
  font-size: 1.6rem;
  line-height: 1.2;
  margin: 0;
}

.hero__text p span {
  white-space: nowrap;
}

@media only screen and (min-width: 250px) {
  .hero .hero__text {
    top: 10vw;
  }
  .hero__text h1 {
    font-size: calc(2rem + 4vw);
  }
  .hero__text p {
    font-size: calc(1.1rem + 2vw);
  }
}

@media only screen and (max-width: 100em) {
  .hero__text p {
    max-width: 60%;
  }
}

.page-footer {
  background-color: #5382A4;
  padding: 0.75em;
  font-size: 0.875em;
  text-align: center;
  color: #fff;
  margin-bottom: 0;
}

.page-footer a[href] {
  color: #d8e3eb;
}

.page-footer a[href]:hover,
.page-footer a[href]:active,
.page-footer a[href]:focus {
  color: #94b3c9;
}

.proportional-container {
  position: relative;
  overflow: hidden;
}

.proportional-container::before {
  content: "";
  display: block;
  width: 100%;
}

.proportional-container__content {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

/* Make the image fill the width and be vertically centered: */
/* (in portrait images this will leave gaps at the sides) */
.proportional-container__image-cover {
  position: absolute;
  width: 100%;
  top: 50%;
  transform: translateY(-50%);
}

/* If `object-fit` is supported, use that and override vertical centering: */
@supports (object-fit: cover) {
  .proportional-container__image-cover {
    height: 100%;
    object-fit: cover;
    top: 0;
    transform: none;
  }
}

.proportional-container--1-1::before {
  padding-top: 100%;
}

.proportional-container--2-1::before {
  padding-top: 50%;
}

.proportional-container--3-1::before {
  padding-top: 33%;
}

.proportional-container--4-3::before {
  padding-top: 75%;
}

.proportional-container--16-9::before {
  padding-top: 56.25%;
}

/* ---------------------------------------------------------------------------------------------- */
/* --| SHAME |----------------------------------------------------------------------------------- */
h1, h2, h3 {
  font-family: 'Merriweather', serif;
  font-weight: normal;
}

main {
  padding: 2.4rem;
}

.feather {
  fill: none;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
  width: 1.25em;
  height: 1.25em;
}

/*
.off-canvas .nav-bar__title-section {
    text-align: left;
}

main {
    @include fallback-rem(max-width, 1000px);
    margin: 0 auto;
    @include fallback-rem(padding, 0 $fallback--base-font-size);
}


.footer {
    background: #eee;
    text-align: center;
}

.footer > p {
    margin: 0;
    @include fallback-rem(padding, $fallback--base-font-size 0);
}
*/
/* ---------------------------------------------------------------------------------------------- */
